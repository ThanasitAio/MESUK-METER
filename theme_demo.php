<?php
/**
 * Theme Demo - ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô Theme Configuration
 */

require_once 'app/utils/ThemeHelper.php';
use App\Utils\ThemeHelper;

// ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ ThemeHelper
ThemeHelper::init();

echo "<h1>MESUK-METER Theme Configuration Demo</h1>\n";
echo "<style>body { font-family: Arial, sans-serif; margin: 20px; }</style>\n";

// ‡πÅ‡∏™‡∏î‡∏á Theme Information
echo "<h2>üé® Theme Information</h2>\n";
$config = ThemeHelper::getThemeConfig();
echo "<p><strong>Theme Name:</strong> " . $config['theme_name'] . "</p>\n";
echo "<p><strong>Version:</strong> " . $config['theme_version'] . "</p>\n";

// ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏µ‡∏´‡∏•‡∏±‡∏Å
echo "<h2>üéØ Primary Colors</h2>\n";
echo "<div style='display: flex; gap: 10px; flex-wrap: wrap;'>\n";

$primaryColors = ['primary', 'primary-dark', 'primary-light', 'primary-hover'];
foreach ($primaryColors as $color) {
    $value = ThemeHelper::getColor($color);
    echo "<div style='padding: 10px; background: $value; color: white; border-radius: 5px; min-width: 120px; text-align: center;'>\n";
    echo "<strong>$color</strong><br>$value\n";
    echo "</div>\n";
}
echo "</div>\n";

// ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏µ Accent
echo "<h2>‚ú® Accent Colors</h2>\n";
echo "<div style='display: flex; gap: 10px; flex-wrap: wrap;'>\n";

$accentColors = ['accent', 'accent-dark', 'accent-light', 'accent-hover'];
foreach ($accentColors as $color) {
    $value = ThemeHelper::getColor($color);
    echo "<div style='padding: 10px; background: $value; color: #333; border-radius: 5px; min-width: 120px; text-align: center;'>\n";
    echo "<strong>$color</strong><br>$value\n";
    echo "</div>\n";
}
echo "</div>\n";

// ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏µ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
echo "<h2>üìä Status Colors</h2>\n";
echo "<div style='display: flex; gap: 10px; flex-wrap: wrap;'>\n";

$statusColors = ['success', 'info', 'warning', 'danger'];
foreach ($statusColors as $color) {
    $value = ThemeHelper::getColor($color);
    echo "<div style='padding: 10px; background: $value; color: white; border-radius: 5px; min-width: 120px; text-align: center;'>\n";
    echo "<strong>$color</strong><br>$value\n";
    echo "</div>\n";
}
echo "</div>\n";

// ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏µ Component
echo "<h2>üß© Component Colors</h2>\n";

// Navbar
echo "<h3>Navbar</h3>\n";
echo "<div style='padding: 15px; background: " . ThemeHelper::getComponentColor('navbar', 'bg') . "; color: " . ThemeHelper::getComponentColor('navbar', 'text') . "; border: 1px solid " . ThemeHelper::getComponentColor('navbar', 'border') . "; border-radius: 5px;'>\n";
echo "This is a navbar example<br>\n";
echo "<small>Background: " . ThemeHelper::getComponentColor('navbar', 'bg') . " | Text: " . ThemeHelper::getComponentColor('navbar', 'text') . "</small>\n";
echo "</div>\n";

// Card
echo "<h3>Card</h3>\n";
echo "<div style='background: " . ThemeHelper::getComponentColor('card', 'bg') . "; border: 2px solid " . ThemeHelper::getComponentColor('card', 'border') . "; border-radius: 10px; overflow: hidden; max-width: 300px;'>\n";
echo "<div style='padding: 10px; background: " . ThemeHelper::getComponentColor('card', 'header_bg') . "; color: " . ThemeHelper::getComponentColor('card', 'header_text') . "; font-weight: bold;'>Card Header</div>\n";
echo "<div style='padding: 15px;'>This is card content area</div>\n";
echo "</div>\n";

// Table
echo "<h3>Table Colors</h3>\n";
echo "<table style='border-collapse: collapse; width: 100%; max-width: 500px;'>\n";
echo "<thead style='background: " . ThemeHelper::getComponentColor('table', 'header_bg') . "; color: " . ThemeHelper::getComponentColor('table', 'header_text') . ";'>\n";
echo "<tr><th style='padding: 10px; border: 1px solid #ccc;'>Column 1</th><th style='padding: 10px; border: 1px solid #ccc;'>Column 2</th></tr>\n";
echo "</thead>\n";
echo "<tbody>\n";
echo "<tr style='background: " . ThemeHelper::getComponentColor('table', 'row_odd') . "; color: " . ThemeHelper::getComponentColor('table', 'text') . ";'>\n";
echo "<td style='padding: 8px; border: 1px solid #ccc;'>Row 1 (Odd)</td><td style='padding: 8px; border: 1px solid #ccc;'>Data</td>\n";
echo "</tr>\n";
echo "<tr style='background: " . ThemeHelper::getComponentColor('table', 'row_even') . "; color: " . ThemeHelper::getComponentColor('table', 'text') . ";'>\n";
echo "<td style='padding: 8px; border: 1px solid #ccc;'>Row 2 (Even)</td><td style='padding: 8px; border: 1px solid #ccc;'>Data</td>\n";
echo "</tr>\n";
echo "</tbody>\n";
echo "</table>\n";

// ‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô Alternative Themes
echo "<h2>üîÑ Alternative Themes</h2>\n";
echo "<p>‡∏£‡∏∞‡∏ö‡∏ö‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö theme ‡∏≠‡∏∑‡πà‡∏ô‡πÜ ‡∏ó‡∏µ‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÑ‡∏î‡πâ:</p>\n";

$altThemes = $config['alternative_themes'];
foreach ($altThemes as $themeName => $colors) {
    echo "<h4>$themeName</h4>\n";
    echo "<div style='display: flex; gap: 5px;'>\n";
    foreach ($colors as $colorName => $colorValue) {
        echo "<div style='padding: 5px; background: $colorValue; color: white; border-radius: 3px; font-size: 12px;'>$colorName<br>$colorValue</div>\n";
    }
    echo "</div>\n";
}

// ‡∏™‡∏£‡πâ‡∏≤‡∏á CSS
echo "<h2>üé® Generate CSS</h2>\n";
echo "<p>‡∏Ñ‡∏•‡∏¥‡∏Å‡∏õ‡∏∏‡πà‡∏°‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á CSS ‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏´‡∏°‡πà‡∏à‡∏≤‡∏Å theme config:</p>\n";

// ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏™‡∏£‡πâ‡∏≤‡∏á CSS ‡πÑ‡∏î‡πâ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
try {
    $cssGenerated = ThemeHelper::generateThemeCSS();
    if ($cssGenerated) {
        echo "<div style='padding: 10px; background: #d4edda; color: #155724; border: 1px solid #c3e6cb; border-radius: 5px;'>\n";
        echo "‚úÖ Theme CSS has been generated successfully!<br>\n";
        echo "üìÅ File location: assets/css/theme.css\n";
        echo "</div>\n";
    }
} catch (Exception $e) {
    echo "<div style='padding: 10px; background: #f8d7da; color: #721c24; border: 1px solid #f5c6cb; border-radius: 5px;'>\n";
    echo "‚ùå Error generating CSS: " . $e->getMessage() . "\n";
    echo "</div>\n";
}

// ‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô API
echo "<h2>üîß API Usage Examples</h2>\n";
echo "<pre style='background: #f8f9fa; padding: 15px; border-radius: 5px; overflow-x: auto;'>\n";
echo htmlspecialchars("<?php
// ‡∏î‡∏∂‡∏á‡∏™‡∏µ‡∏´‡∏•‡∏±‡∏Å
\$primaryColor = ThemeHelper::getColor('primary');

// ‡∏î‡∏∂‡∏á‡∏™‡∏µ‡∏Ç‡∏≠‡∏á component
\$navbarBg = ThemeHelper::getComponentColor('navbar', 'bg');

// ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏µ
ThemeHelper::updateColor('primary', '#ff0000');

// ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô theme
ThemeHelper::applyAlternativeTheme('blue_theme');

// ‡∏™‡∏£‡πâ‡∏≤‡∏á CSS ‡πÉ‡∏´‡∏°‡πà
ThemeHelper::generateThemeCSS();
?>");
echo "</pre>\n";

echo "<h2>üìã Summary</h2>\n";
echo "<ul>\n";
echo "<li>‚úÖ Theme config ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô</li>\n";
echo "<li>‚úÖ ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÅ‡∏Å‡πâ‡∏™‡∏µ‡πÑ‡∏î‡πâ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏î‡∏µ‡∏¢‡∏ß</li>\n";
echo "<li>‚úÖ ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏´‡∏•‡∏≤‡∏¢ theme ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏∞‡∏ö‡∏ö‡∏≠‡∏∑‡πà‡∏ô‡πÜ</li>\n";
echo "<li>‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á CSS ‡πÅ‡∏ö‡∏ö dynamic</li>\n";
echo "<li>‚úÖ API ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏á‡πà‡∏≤‡∏¢</li>\n";
echo "</ul>\n";

?>